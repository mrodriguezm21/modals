{"version":3,"sources":["Components/Modal.jsx","App.jsx","index.js"],"names":["Modal","children","isOpen","onClose","title","includeHeader","includeOverlay","includePadding","modalPosition","Overlay","ModalContainer","Header","CloseButton","onClick","xmlns","width","height","fill","className","viewBox","d","styled","div","props","button","App","useState","modal1","setModal1","modal2","setModal2","modal3","setModal3","modal4","setModal4","changeState","func","prev","ButtonContainer","Button","Content","src","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebc3e623.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Modal = ({\r\n  children,\r\n  isOpen,\r\n  onClose,\r\n  title = \"No title included\",\r\n  includeHeader,\r\n  includeOverlay,\r\n  includePadding,\r\n  modalPosition,\r\n}) => {\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Overlay includeOverlay={includeOverlay} modalPosition={modalPosition}>\r\n          <ModalContainer includePadding={includePadding}>\r\n            {includeHeader && (\r\n              <Header>\r\n                <h3>{title}</h3>\r\n              </Header>\r\n            )}\r\n            <CloseButton onClick={onClose}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                className=\"bi bi-x\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n              </svg>\r\n            </CloseButton>\r\n            {children}\r\n          </ModalContainer>\r\n        </Overlay>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport { Modal };\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: ${(props) =>\r\n    props.includeOverlay ? \"rgba(0, 0, 0, 0.5)\" : \"rgba(0, 0, 0, 0)\"};\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: ${props => props.modalPosition? props.modalPosition : \"center\"};\r\n  justify-content: center;\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 40%;\r\n  justify-content: center;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  padding: ${props => props.includePadding ? '20px' : '0'};\r\n  position: relative;\r\n`;\r\nconst Header = styled.div`\r\n  font-size: 1.5rem;\r\n  padding-bottom: 10px;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  height: 50px;\r\n  border-bottom: 1px solid #ccc;\r\n  h3 {\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    color: #1766dc;\r\n  }\r\n`;\r\nconst CloseButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  color: #1766dc;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #f2f2f2;\r\n    transition: 0.3s ease all;\r\n  }\r\n\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\nimport { Modal } from \"./Components/Modal\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  const [modal1, setModal1] = useState(false);\n  const [modal2, setModal2] = useState(false);\n  const [modal3, setModal3] = useState(false);\n  const [modal4, setModal4] = useState(false);\n\n  const changeState = (func) => {\n    func((prev) => !prev);\n  };\n\n  return (\n    <div className=\"App\">\n      <ButtonContainer>\n        <Button onClick={() => changeState(setModal1)}>Modal 1</Button>\n        <Button onClick={() => changeState(setModal2)}>Modal 2</Button>\n        <Button onClick={() => changeState(setModal3)}>Modal 3</Button>\n        <Button onClick={() => changeState(setModal4)}>Modal 4</Button>\n      </ButtonContainer>\n      {/* Modal 1 */}\n      <Modal\n        isOpen={modal1}\n        onClose={() => changeState(setModal1)}\n        title=\"Some title\"\n        includeHeader={true}\n        includePadding={true}\n        includeOverlay={true}\n      >\n        <Content>\n          <h1>Article title</h1>\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nihil, eaque!\n          </p>\n          <Button onClick={() => changeState(setModal1)}>Close</Button>\n        </Content>\n      </Modal>\n      {/* Modal 2 */}\n      <Modal\n        isOpen={modal2}\n        onClose={() => changeState(setModal2)}\n        includeHeader={false}\n        includePadding={false}\n        includeOverlay={true}\n      >\n        <Content>\n          <img src=\"https://cdn.pixabay.com/photo/2019/10/11/16/56/cat-4542301_960_720.jpg\" alt=\"\" />\n        </Content>\n      </Modal>\n      {/* Modal 3 */}\n      <Modal\n        isOpen={modal3}\n        onClose={() => changeState(setModal3)}\n        title=\"Cats\"\n        includeHeader={true}\n        includePadding={true}\n        modalPosition=\"start\"\n      >\n        <Content>\n        <h1>Cats</h1>\n          <p>\n            Cats! Cats! Cats! Cats! Cats! Cats! Cats! Cats! Cats! Cats! Cats!\n          </p>\n          <Button onClick={() => changeState(setModal3)}>Close</Button>\n        </Content>\n      </Modal>\n      {/* Modal 4 */}\n      <Modal\n        isOpen={modal4}\n        onClose={() => changeState(setModal4)}\n        title=\"Cats\"\n        includeHeader={true}\n        includePadding={true}\n        includeOverlay={false}\n        modalPosition=\"end\"\n      >\n        <Content>\n        <h1>Cats</h1>\n          <p>\n            Cats! Cats! Cats! Cats! Cats! Cats! Cats! Cats! Cats! Cats! Cats!\n          </p>\n          <Button onClick={() => changeState(setModal4)}>Close</Button>\n        </Content>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n\nconst ButtonContainer = styled.div`\n  padding: 40px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nconst Button = styled.button`\n  display: block;\n  font-size: 16px;\n  min-width: fit-content;\n  height: 50px;\n  padding: 10px 30px;\n  border-radius: 100px;\n  color: #fff;\n  border: none;\n  background: #1766dc;\n  cursor: pointer;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n  transition: 0.3s ease all;\n  &:hover {\n    background: #0066ff;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  h1 {\n    font-size: 42px;\n    font-weight: 700;\n    margin-bottom: 10px;\n  }\n  p {\n    font-size: 18px;\n    margin-bottom: 20px;\n  }\n  img {\n    width: 100%;\n    vertical-align: top;\n    border-radius: 3px;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}